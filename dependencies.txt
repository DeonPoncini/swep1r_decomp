External dependencies of swep1r

Source: .rdata block of the binary

ADVAPI32.DLL
LSTATUS __stdcall RegOpenKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)
LSTATUS __stdcall RegCloseKey(HKEY hKey)
LSTATUS __stdcall RegCreateKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD Reserved, LPSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition)
LSTATUS __stdcall RegSetValueExA(HKEY hKey, LPCSTR lpValueName, DWORD Reserved, DWORD dwType, BYTE * lpData, DWORD cbData)
LSTATUS __stdcall RegQueryValueExA(HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)

COMCTL32.DLL
void __stdcall InitCommonControls(void)

DDRAW.DLL
undefined DirectDrawCreate()
undefined DirectDrawEnumerateA()
undefined DirectInputCreateA()

GDI32.DLL
BOOL __stdcall DeleteObject(HGDIOBJ ho)
HGDIOBJ __stdcall SelectObject(HDC hdc, HGDIOBJ h)
int __stdcall SetBkMode(HDC hdc, int mode)
COLORREF __stdcall SetTextColor(HDC hdc, COLORREF color)
HGDIOBJ __stdcall GetStockObject(int i)
HFONT __stdcall CreateFontA(int cHeight, int cWidth, int cEscapement, int cOrientation, int cWeight, DWORD bItalic, DWORD bUnderline, DWORD bStrikeOut, DWORD iCharSet, DWORD iOutPrecision, DWORD iClipPrecision, DWORD iQuality, DWORD iPitchAndFamily, LPCSTR pszFaceName)
BOOL __stdcall TextOutA(HDC hdc, int x, int y, LPCSTR lpString, int c)

IFORCE2.DLL
undefined _IFReleaseProject@4()
undefined _IFReleaseEffects@8()
undefined _IFCreateEffects@12()
undefined _IFLoadProjectFile@8()

KERNEL32.DLL
HANDLE __stdcall GetStdHandle(DWORD nStdHandle)
void __stdcall DebugBreak(void)
void __stdcall OutputDebugStringA(LPCSTR lpOutputString)
BOOL __stdcall SetConsoleTextAttribute(HANDLE hConsoleOutput, WORD wAttributes)
BOOL __stdcall CreateDirectoryA(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL __stdcall DeleteFileA(LPCSTR lpFileName)
BOOL __stdcall FindNextFileA(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)
BOOL __stdcall FindClose(HANDLE hFindFile)
BOOL __stdcall RemoveDirectoryA(LPCSTR lpPathName)
HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
DWORD __stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
BOOL __stdcall CloseHandle(HANDLE hObject)
BOOL __stdcall TerminateThread(HANDLE hThread, DWORD dwExitCode)
HANDLE __stdcall CreateEventA(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCSTR lpName)
HANDLE __stdcall CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId)
BOOL __stdcall SetEvent(HANDLE hEvent)
DWORD __stdcall SuspendThread(HANDLE hThread)
DWORD __stdcall ResumeThread(HANDLE hThread)
BOOL __stdcall SetFileAttributesA(LPCSTR lpFileName, DWORD dwFileAttributes)
BOOL __stdcall GetComputerNameA(LPSTR lpBuffer, LPDWORD nSize)
void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName, LPWIN32_FIND_DATAA lpFindFileData)
DWORD __stdcall GetLastError(void)
UINT __stdcall GetDriveTypeA(LPCSTR lpRootPathName)
BOOL __stdcall GetVolumeInformationA(LPCSTR lpRootPathName, LPSTR lpVolumeNameBuffer, DWORD nVolumeNameSize, LPDWORD lpVolumeSerialNumber, LPDWORD lpMaximumComponentLength, LPDWORD lpFileSystemFlags, LPSTR lpFileSystemNameBuffer, DWORD nFileSystemNameSize)
BOOL __stdcall WriteConsoleA(HANDLE hConsoleOutput, void * lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
int __stdcall WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCSTR lpDefaultChar, LPBOOL lpUsedDefaultChar)
void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
LONG __stdcall InterlockedIncrement(LONG * lpAddend)
LPVOID __stdcall VirtualAlloc(LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect)
void __stdcall RtlUnwind(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue)
BOOL __stdcall GetCPInfo(UINT CodePage, LPCPINFO lpCPInfo)
LPWCH __stdcall GetEnvironmentStringsW(void)
LPCH __stdcall GetEnvironmentStrings(void)
BOOL __stdcall FreeEnvironmentStringsW(LPWCH param_1)
BOOL __stdcall FreeEnvironmentStringsA(LPCH param_1)
DWORD __stdcall GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename, DWORD nSize)
LONG __stdcall UnhandledExceptionFilter(_EXCEPTION_POINTERS * ExceptionInfo)
BOOL __stdcall SetEndOfFile(HANDLE hFile)
BOOL __stdcall SetStdHandle(DWORD nStdHandle, HANDLE hHandle)
BOOL __stdcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
BOOL __stdcall ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
DWORD __stdcall SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
UINT __stdcall SetHandleCount(UINT uNumber)
LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
void __stdcall SetLastError(DWORD dwErrCode)
DWORD __stdcall TlsAlloc(void)
BOOL __stdcall TlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue)
DWORD __stdcall GetCurrentThreadId(void)
BOOL __stdcall GetStringTypeW(DWORD dwInfoType, LPCWSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
BOOL __stdcall SetEnvironmentVariableA(LPCSTR lpName, LPCSTR lpValue)
int __stdcall CompareStringW(LCID Locale, DWORD dwCmpFlags, PCNZWCH lpString1, int cchCount1, PCNZWCH lpString2, int cchCount2)
int __stdcall CompareStringA(LCID Locale, DWORD dwCmpFlags, PCNZCH lpString1, int cchCount1, PCNZCH lpString2, int cchCount2)
int __stdcall GetLocaleInfoW(LCID Locale, LCTYPE LCType, LPWSTR lpLCData, int cchData)
BOOL __stdcall GetStringTypeA(LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
BOOL __stdcall FileTimeToLocalFileTime(FILETIME * lpFileTime, LPFILETIME lpLocalFileTime)
BOOL __stdcall VirtualFree(LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType)
HANDLE __stdcall HeapCreate(DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize)
BOOL __stdcall HeapDestroy(HANDLE hHeap)
DWORD __stdcall GetTimeZoneInformation(LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
HMODULE __stdcall LoadLibraryA(LPCSTR lpLibFileName)
int __stdcall LCMapStringW(LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
int __stdcall LCMapStringA(LCID Locale, DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest)
BOOL __stdcall FlushFileBuffers(HANDLE hFile)
int __stdcall MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
LPVOID __stdcall HeapReAlloc(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes)
LONG __stdcall InterlockedDecrement(LONG * lpAddend)
BOOL __stdcall FileTimeToSystemTime(FILETIME * lpFileTime, LPSYSTEMTIME lpSystemTime)
int __stdcall GetLocaleInfoA(LCID Locale, LCTYPE LCType, LPSTR lpLCData, int cchData)
BOOL __stdcall HeapFree(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
noreturn void __stdcall ExitProcess(UINT uExitCode)
BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT uExitCode)
HANDLE __stdcall GetCurrentProcess(void)
DWORD __stdcall GetVersion(void)
void __stdcall GetStartupInfoA(LPSTARTUPINFOA lpStartupInfo)
LPVOID __stdcall HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
DWORD __stdcall GetFileType(HANDLE hFile)
HANDLE __stdcall CreateFileA(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
LPSTR __stdcall GetCommandLineA(void)

SMUSH.DLL
undefined SmushSetVolume()
undefined SmushPlay()
undefined SmushShutdown()
undefined SmushStartup()

USER32.DLL
int __cdecl wsprintfA(LPSTR param_1, LPCSTR param_2, ...)
int __stdcall GetKeyNameTextA(LONG lParam, LPSTR lpString, int cchSize)
BOOL __stdcall GetCursorPos(LPPOINT lpPoint)
BOOL __stdcall SetCursorPos(int X, int Y)
int __stdcall MessageBoxA(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)
UINT __stdcall MapVirtualKeyA(UINT uCode, UINT uMapType)
BOOL __stdcall ShowWindow(HWND hWnd, int nCmdShow)
BOOL __stdcall GetClientRect(HWND hWnd, LPRECT lpRect)
BOOL __stdcall GetWindowRect(HWND hWnd, LPRECT lpRect)
INT_PTR __stdcall DialogBoxParamA(HINSTANCE hInstance, LPCSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)
LONG __stdcall GetWindowLongA(HWND hWnd, int nIndex)
BOOL __stdcall SetDlgItemTextA(HWND hDlg, int nIDDlgItem, LPCSTR lpString)
BOOL __stdcall CheckDlgButton(HWND hDlg, int nIDButton, UINT uCheck)
LONG __stdcall SetWindowLongA(HWND hWnd, int nIndex, LONG dwNewLong)
LRESULT __stdcall SendMessageA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
HWND __stdcall GetDlgItem(HWND hDlg, int nIDDlgItem)
BOOL __stdcall EndDialog(HWND hDlg, INT_PTR nResult)
UINT __stdcall IsDlgButtonChecked(HWND hDlg, int nIDButton)
BOOL __stdcall TranslateMessage(MSG * lpMsg)
BOOL __stdcall MoveWindow(HWND hWnd, int X, int Y, int nWidth, int nHeight, BOOL bRepaint)
HWND __stdcall GetDesktopWindow(void)
int __stdcall ShowCursor(BOOL bShow)
BOOL __stdcall ClientToScreen(HWND hWnd, LPPOINT lpPoint)
int __stdcall GetSystemMetrics(int nIndex)
HWND __stdcall FindWindowA(LPCSTR lpClassName, LPCSTR lpWindowName)
void __stdcall PostQuitMessage(int nExitCode)
LRESULT __stdcall DefWindowProcA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
HICON __stdcall LoadIconA(HINSTANCE hInstance, LPCSTR lpIconName)
HCURSOR __stdcall LoadCursorA(HINSTANCE hInstance, LPCSTR lpCursorName)
ATOM __stdcall RegisterClassExA(WNDCLASSEXA * param_1)
HWND __stdcall CreateWindowExA(DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)
BOOL __stdcall UpdateWindow(HWND hWnd)
BOOL __stdcall SetWindowPos(HWND hWnd, HWND hWndInsertAfter, int X, int Y, int cx, int cy, UINT uFlags)
BOOL __stdcall PeekMessageA(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg)
BOOL __stdcall GetMessageA(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax)
LRESULT __stdcall DispatchMessageA(MSG * lpMsg)

VERSION.DLL
DWORD __stdcall GetFileVersionInfoSizeA(LPCSTR lptstrFilename, LPDWORD lpdwHandle)
BOOL __stdcall GetFileVersionInfoA(LPCSTR lptstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData)
BOOL __stdcall VerQueryValueA(LPCVOID pBlock, LPCSTR lpSubBlock, LPVOID * lplpBuffer, PUINT puLen)

WINMM.DLL
DWORD __stdcall timeGetTime(void)

OLE32.DLL
void __stdcall CoUninitialize(void)
HRESULT __stdcall CoInitialize(LPVOID pvReserved)
HRESULT __stdcall CoCreateInstance(IID * rclsid, LPUNKNOWN pUnkOuter, DWORD dwClsContext, IID * riid, LPVOID * ppv)
int __stdcall StringFromGUID2(GUID * rguid, LPOLESTR lpsz, int cchMax)


