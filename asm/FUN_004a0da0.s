; FUN_004a0da0
MOV ECX,dword ptr [ESP + 0x4]
SUB ESP,0x140
LEA EAX,[ESP]
PUSH EAX
PUSH ECX
CALL dword ptr [0x004ac080]
TEST EAX,EAX
JNZ 0x004a0e16
CALL dword ptr [0x004ac0c0]
ADD EAX,-0x2
CMP EAX,0x10
JA 0x004a0e01
XOR EDX,EDX
MOV DL,byte ptr [EAX + 0x4a0eac]
JMP dword ptr [EDX*0x4 + 0x4a0e9c]
CALL 0x004a3dc0
MOV dword ptr [EAX],0x2
OR EAX,0xffffffff
ADD ESP,0x140
RET
CALL 0x004a3dc0
MOV dword ptr [EAX],0xc
OR EAX,0xffffffff
ADD ESP,0x140
RET
CALL 0x004a3dc0
MOV dword ptr [EAX],0x16
OR EAX,0xffffffff
ADD ESP,0x140
RET
MOV EAX,dword ptr [ESP]
PUSH EDI
MOV ECX,EAX
PUSH ESI
MOV ESI,dword ptr [ESP + 0x150]
SUB ECX,0x80
NEG ECX
SBB ECX,ECX
LEA EDX,[ESP + 0xc]
AND ECX,EAX
PUSH EDX
MOV dword ptr [ESI],ECX
CALL 0x004a0ef0
ADD ESP,0x4
MOV dword ptr [ESI + 0x4],EAX
LEA EAX,[ESP + 0x14]
PUSH EAX
CALL 0x004a0ef0
ADD ESP,0x4
LEA ECX,[ESP + 0x1c]
MOV dword ptr [ESI + 0x8],EAX
PUSH ECX
CALL 0x004a0ef0
MOV dword ptr [ESI + 0xc],EAX
LEA EDI,[ESP + 0x38]
OR ECX,0xffffffff
XOR EAX,EAX
ADD ESP,0x4
MOV EDX,dword ptr [ESP + 0x28]
SCASB.REPNE ES:EDI
NOT ECX
SUB EDI,ECX
MOV dword ptr [ESI + 0x10],EDX
LEA EDX,[ESI + 0x14]
MOV EAX,ECX
MOV ESI,EDI
MOV EDI,EDX
SHR ECX,0x2
MOVSD.REP ES:EDI,ESI
MOV ECX,EAX
AND ECX,0x3
XOR EAX,EAX
MOVSB.REP ES:EDI,ESI
POP ESI
POP EDI
ADD ESP,0x140
RET
